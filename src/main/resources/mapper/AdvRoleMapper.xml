<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.suma.dao.AdvRoleMapper" >
  <resultMap id="BaseResultMap" type="com.suma.pojo.AdvRole" >
    <id column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="role_key" property="roleKey" jdbcType="VARCHAR" />
    <result column="role_sort" property="roleSort" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    role_id, role_name, role_key, role_sort, status, create_by, create_time, update_by, 
    update_time, remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from adv_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <select id="selectMaxRoleSort" resultType="java.lang.Integer">
    select IFNULL(MAX(role_sort),0) from adv_role;
  </select>
  <select id="selectByAdvRoleName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from adv_role where role_name = #{roleName};
  </select>
  <select id="selectRoleList" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from adv_role
    <where>
      <if test="roleName != null and roleName !=''">
          AND role_name like concat('%',#{roleName},'%')
      </if>
      <if test="roleKey != null and roleKey != ''">
        AND role_key like concat('%',#{roleKey},'%')
      </if>
      <if test="status != null and status != ''">
        AND status = #{status}
      </if>
      <if test="startTime != null and startTime != ''">
        AND create_time &gt;= #{startTime}
      </if>
      <if test="endTime != null and endTime != ''">
        AND create_time &lt;= #{endTime}
      </if>
    </where>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from adv_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.suma.pojo.AdvRole" >
    insert into adv_role (role_id, role_name, role_key, 
      role_sort, status, create_by, 
      create_time, update_by, update_time, 
      remark)
    values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{roleKey,jdbcType=VARCHAR}, 
      #{roleSort,jdbcType=INTEGER}, #{status,jdbcType=CHAR}, #{createBy,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.suma.pojo.AdvRole" >
    insert into adv_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="roleKey != null" >
        role_key,
      </if>
      <if test="roleSort != null" >
        role_sort,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
        create_time,
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleKey != null" >
        #{roleKey,jdbcType=VARCHAR},
      </if>
      <if test="roleSort != null" >
        #{roleSort,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
        sysdate(),
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.suma.pojo.AdvRole" >
    update adv_role
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleKey != null" >
        role_key = #{roleKey,jdbcType=VARCHAR},
      </if>
      <if test="roleSort != null" >
        role_sort = #{roleSort,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
        update_time = sysdate(),
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.suma.pojo.AdvRole" >
    update adv_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_key = #{roleKey,jdbcType=VARCHAR},
      role_sort = #{roleSort,jdbcType=INTEGER},
      status = #{status,jdbcType=CHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
</mapper>