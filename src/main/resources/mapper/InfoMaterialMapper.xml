<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.suma.dao.InfoMaterialMapper">
  <resultMap id="BaseResultMap" type="com.suma.pojo.InfoMaterial">
    <result column="ADV_INFO_ID" jdbcType="BIGINT" property="advInfoId" />
    <result column="MATERIAL_ID" jdbcType="BIGINT" property="materialId" />
    <result column="SEQUENCE" jdbcType="INTEGER" property="sequence" />
    <result column="DURATION" jdbcType="INTEGER" property="duration" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ADV_INFO_ID, MATERIAL_ID, SEQUENCE, DURATION
  </sql>
  <select id="selectByExample" parameterType="com.suma.pojo.InfoMaterialExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from info_material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <!--根据id查询-->
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from info_material
    where MATERIAL_ID = #{id,jdbcType=BIGINT}
  </select>


  <delete id="deleteByExample" parameterType="com.suma.pojo.InfoMaterialExample">
    delete from info_material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.suma.pojo.InfoMaterial">
    insert into info_material (ADV_INFO_ID, MATERIAL_ID, SEQUENCE, 
      DURATION)
    values (#{advInfoId,jdbcType=BIGINT}, #{materialId,jdbcType=BIGINT}, #{sequence,jdbcType=INTEGER}, 
      #{duration,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.suma.pojo.InfoMaterial">
    insert into info_material
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="advInfoId != null">
        ADV_INFO_ID,
      </if>
      <if test="materialId != null">
        MATERIAL_ID,
      </if>
      <if test="sequence != null">
        SEQUENCE,
      </if>
      <if test="duration != null">
        DURATION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="advInfoId != null">
        #{advInfoId,jdbcType=BIGINT},
      </if>
      <if test="materialId != null">
        #{materialId,jdbcType=BIGINT},
      </if>
      <if test="sequence != null">
        #{sequence,jdbcType=INTEGER},
      </if>
      <if test="duration != null">
        #{duration,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.suma.pojo.InfoMaterialExample" resultType="java.lang.Long">
    select count(*) from info_material
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update info_material
    <set>
      <if test="record.advInfoId != null">
        ADV_INFO_ID = #{record.advInfoId,jdbcType=BIGINT},
      </if>
      <if test="record.materialId != null">
        MATERIAL_ID = #{record.materialId,jdbcType=BIGINT},
      </if>
      <if test="record.sequence != null">
        SEQUENCE = #{record.sequence,jdbcType=INTEGER},
      </if>
      <if test="record.duration != null">
        DURATION = #{record.duration,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update info_material
    set ADV_INFO_ID = #{record.advInfoId,jdbcType=BIGINT},
      MATERIAL_ID = #{record.materialId,jdbcType=BIGINT},
      SEQUENCE = #{record.sequence,jdbcType=INTEGER},
      DURATION = #{record.duration,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByDoubleId" parameterType="InfoMaterial">
  update info_material
  set ADV_INFO_ID = #{advInfoId},
      MATERIAL_ID = #{materialId},
      SEQUENCE = #{sequence},
      DURATION = #{duration}
  <where>
    <if test="advInfoId != null">
      ADV_INFO_ID = #{advInfoId}
    </if>
    <if test="materialId != null">
      and  MATERIAL_ID = #{materialId}
    </if>
  </where>
  </update>
</mapper>